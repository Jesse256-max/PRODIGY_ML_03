import os
import cv2
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

# Paths and settings
DATADIR = "path_to_dataset/train"  # ← Replace with actual path
CATEGORIES = ["dog", "cat"]
IMG_SIZE = 64
LIMIT = 500  # Number of images per category (keep it small)

# Load and preprocess images
data = []
for category in CATEGORIES:
    path = DATADIR
    label = CATEGORIES.index(category)
    count = 0
    for img_name in os.listdir(path):
        if img_name.lower().startswith(category):
            try:
                img_path = os.path.join(path, img_name)
                img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
                img = cv2.resize(img, (IMG_SIZE, IMG_SIZE))
                data.append([img.flatten(), label])
                count += 1
                if count >= LIMIT:
                    break
            except:
                continue

# Prepare data
X = np.array([item[0] for item in data])
y = np.array([item[1] for item in data])
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train SVM
model = SVC(kernel='linear')
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
acc = accuracy_score(y_test, y_pred)
print(f"Accuracy: {acc * 100:.2f}%")
